@using DevExpress.ExpressApp.Actions

<DxMenu Data="@ActionControl.Items.ElementAt(0).Items" ItemClick="@OnItemClick"
        CollapseItemToIconMode="MenuCollapseItemToIconMode.Sequentially"
       >
    
    @*<Items>
        
        <DxMenuItem Text="Products" IconCssClass="oi oi-layers" />
        <DxMenuItem Text="Support" IconCssClass="oi oi-person" />
        <DxMenuItem Text="Documentation" IconCssClass="oi oi-book" />
        <DxMenuItem Text="Demos" IconCssClass="oi oi-monitor" />
    </Items>*@
   <DataMappings>
        <DxMenuDataMapping Text="@nameof(ChoiceActionItem.Caption)" Children="@nameof(ChoiceActionItem.Items)" />
    </DataMappings>
</DxMenu>

@code {
    public static RenderFragment Create(RenderFragment titleTemplate, CustomShowNavigationItemActionControl actionControl) =>
        @<CustomShowNavigationItemActionControlComponent TitleTemplate="@titleTemplate" ActionControl="@actionControl" />;
    [Parameter]
    public RenderFragment TitleTemplate { get; set; }
    [Parameter]
    public CustomShowNavigationItemActionControl ActionControl { get; set; }
    public RenderFragment Child { get; set; }
    protected override void OnInitialized()
    {
        base.OnInitialized();
        foreach (var item in ActionControl.Items.ElementAt(0).Items)
        {
            Child = builder =>
            {
                builder.OpenComponent<DxMenuItem>(0);
                builder.AddAttribute(1, "Text", item.Caption);
                builder.CloseComponent();
            };
        }
    }
    private void OnItemClick(MenuItemClickEventArgs e) => ActionControl.DoExecute((ChoiceActionItem)e.ItemInfo.Data);
}